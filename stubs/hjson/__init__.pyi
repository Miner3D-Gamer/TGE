from .decoder import HjsonDecoder as HjsonDecoder
from .encoder import JSONEncoder as JSONEncoder
from .encoderH import HjsonEncoder as HjsonEncoder
from .scanner import HjsonDecodeError as HjsonDecodeError
from _typeshed import Incomplete

__all__ = ['dump', 'dumps', 'load', 'loads', 'dumpJSON', 'dumpsJSON', 'HjsonDecoder', 'HjsonDecodeError', 'HjsonEncoder', 'JSONEncoder', 'OrderedDict', 'simple_first']

OrderedDict: Incomplete

def load(fp, encoding: Incomplete | None = None, cls: Incomplete | None = None, object_hook: Incomplete | None = None, parse_float: Incomplete | None = None, parse_int: Incomplete | None = None, object_pairs_hook=..., use_decimal: bool = False, namedtuple_as_object: bool = True, tuple_as_array: bool = True, **kw): ...
def loads(s, encoding: Incomplete | None = None, cls: Incomplete | None = None, object_hook: Incomplete | None = None, parse_float: Incomplete | None = None, parse_int: Incomplete | None = None, object_pairs_hook: Incomplete | None = None, use_decimal: bool = False, **kw): ...
def dump(obj, fp, skipkeys: bool = False, ensure_ascii: bool = True, check_circular: bool = True, cls: Incomplete | None = None, indent: Incomplete | None = None, encoding: str = 'utf-8', default: Incomplete | None = None, use_decimal: bool = True, namedtuple_as_object: bool = True, tuple_as_array: bool = True, bigint_as_string: bool = False, sort_keys: bool = False, item_sort_key: Incomplete | None = None, for_json: bool = False, int_as_string_bitcount: Incomplete | None = None, **kw) -> None: ...
def dumps(obj, skipkeys: bool = False, ensure_ascii: bool = True, check_circular: bool = True, cls: Incomplete | None = None, indent: Incomplete | None = None, encoding: str = 'utf-8', default: Incomplete | None = None, use_decimal: bool = True, namedtuple_as_object: bool = True, tuple_as_array: bool = True, bigint_as_string: bool = False, sort_keys: bool = False, item_sort_key: Incomplete | None = None, for_json: bool = False, int_as_string_bitcount: Incomplete | None = None, **kw): ...
def dumpJSON(obj, fp, skipkeys: bool = False, ensure_ascii: bool = True, check_circular: bool = True, cls: Incomplete | None = None, indent: Incomplete | None = None, separators: Incomplete | None = None, encoding: str = 'utf-8', default: Incomplete | None = None, use_decimal: bool = True, namedtuple_as_object: bool = True, tuple_as_array: bool = True, bigint_as_string: bool = False, sort_keys: bool = False, item_sort_key: Incomplete | None = None, for_json: bool = False, int_as_string_bitcount: Incomplete | None = None, **kw) -> None: ...
def dumpsJSON(obj, skipkeys: bool = False, ensure_ascii: bool = True, check_circular: bool = True, cls: Incomplete | None = None, indent: Incomplete | None = None, separators: Incomplete | None = None, encoding: str = 'utf-8', default: Incomplete | None = None, use_decimal: bool = True, namedtuple_as_object: bool = True, tuple_as_array: bool = True, bigint_as_string: bool = False, sort_keys: bool = False, item_sort_key: Incomplete | None = None, for_json: bool = False, int_as_string_bitcount: Incomplete | None = None, **kw): ...
def simple_first(kv): ...
